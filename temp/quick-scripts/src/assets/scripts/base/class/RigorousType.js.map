{"version":3,"sources":["assets\\scripts\\base\\class\\RigorousType.ts"],"names":[],"mappings":"","file":"","sourceRoot":"/","sourcesContent":["/**\r\n * 长整型\r\n */\r\nexport interface Iint64 {\r\n    int64: number;\r\n}\r\n/**\r\n * 无符号长整型\r\n */\r\nexport interface Iuint64 {\r\n    uint64: number;\r\n}\r\n/**\r\n * 整型\r\n */\r\nexport interface Iint32 {\r\n    int32: number;\r\n}\r\n/**\r\n * 无符号整型\r\n */\r\nexport interface Iuint32 {\r\n    uint32: number;\r\n}\r\n/**\r\n * 短整型\r\n */\r\nexport interface Iint16 {\r\n    int16: number;\r\n}\r\n/**\r\n * 无符号短整型\r\n */\r\nexport interface Iuint16 {\r\n    uint16: number;\r\n}\r\n/**\r\n * 字节类型\r\n */\r\nexport interface Iint8 {\r\n    int8: number;\r\n}\r\n/**\r\n * 无符号字节类型\r\n */\r\nexport interface Iuint8 {\r\n    uint8: number;\r\n}\r\n/**\r\n * 长浮点类型\r\n */\r\nexport interface Ifloat64 {\r\n    float64: number;\r\n}\r\n/**\r\n * 浮点类型\r\n */\r\nexport interface Ifloat32 {\r\n    float32: number;\r\n}\r\n/**\r\n * 文本类型\r\n */\r\nexport interface Itext {\r\n    text: string;\r\n}\r\n/**\r\n * 命名类型\r\n */\r\nexport interface Inamed {\r\n    named: string;\r\n}\r\n/**\r\n * 四维矢量\r\n */\r\nexport interface Ivector4 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n}\r\n/**\r\n * 四维整数矢量\r\n */\r\nexport interface Iintvector4 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n}\r\n/**\r\n * rgba色彩\r\n */\r\nexport interface Irgba {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    a: number;\r\n}\r\n/**\r\n * cmyk色彩\r\n * Cyan,Magenta,Yellow,Black\r\n */\r\nexport interface Icmyk {\r\n    c: number;\r\n    m: number;\r\n    y: number;\r\n    k: number;\r\n}\r\n/**\r\n * 三维矢量\r\n */\r\nexport interface Ivector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n/**\r\n * 三维整数矢量\r\n */\r\nexport interface Iintvector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n/**\r\n * hsb色彩\r\n * hues,saturation,brightness\r\n */\r\nexport interface Ihsb {\r\n    h: number;\r\n    s: number;\r\n    b: number;\r\n}\r\n/**\r\n * 三维坐标\r\n */\r\nexport interface Iposition {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n/**\r\n * 笛卡尔旋转\r\n */\r\nexport interface Irotation {\r\n    yaw: number;\r\n    pitch: number;\r\n    roll: number;\r\n}\r\n/**\r\n * 二维矢量\r\n */\r\nexport interface Ivector2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n/**\r\n * 二维整数矢量\r\n */\r\nexport interface Iintvector2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n/**\r\n * 平面尺寸\r\n */\r\nexport interface Isize {\r\n    width: number;\r\n    height: number;\r\n}\r\n/**\r\n * 笛卡尔变换\r\n */\r\nexport interface Itransfrom {\r\n    position: Iposition;\r\n    rotation: Irotation;\r\n    scale: Ivector3;\r\n}\r\n/**\r\n * 矩阵4\r\n */\r\nexport interface Imat4 {\r\n    m00: number; m01: number; m02: number; m03: number;\r\n    m04: number; m05: number; m06: number; m07: number;\r\n    m08: number; m09: number; m10: number; m11: number;\r\n    m12: number; m13: number; m14: number; m15: number;\r\n}\r\n/**\r\n * 矩阵3\r\n */\r\nexport interface Imat3 {\r\n    m00: number; m01: number; m02: number;\r\n    m03: number; m04: number; m05: number;\r\n    m06: number; m07: number; m08: number;\r\n}\r\n/**\r\n * 哈希表\r\n */\r\nexport interface Ihash {\r\n    get(key: string | number): any;\r\n    set<T, U>(key: string | number, value: U): void;\r\n    remove(key: string | number): boolean;\r\n    clean(): void;\r\n}\r\n/**\r\n * 数组\r\n */\r\nexport interface Iarray {\r\n    get<T extends Iuint64 | Iuint32 | Iuint16 | Iuint8>(key: T): any;\r\n    set<T extends Iuint64 | Iuint32 | Iuint16 | Iuint8, U>(key: T, value: U): void;\r\n    add<T>(value: T): number;\r\n    remove<T extends Iuint64 | Iuint32 | Iuint16 | Iuint8>(key: T): boolean;\r\n    clean(): void;\r\n}\r\n/**\r\n * 集\r\n */\r\nexport interface Iset {\r\n    make<T extends Iarray>(array: T): Iset;\r\n    intersection<T extends Iset, U extends Iset>(array_a: T, array_b: U): Iset;\r\n    difference<T extends Iset, U extends Iset>(array_a: T, array_b: U): Iset;\r\n    union<T extends Iset, U extends Iset>(array_a: T, array_b: U): Iset;\r\n    toArray(): Iarray;\r\n    clean(): void;\r\n}\r\n/**\r\n * 映射\r\n */\r\nexport interface Imap {\r\n    get<T>(key: T): any;\r\n    set<T, U>(key: T, value: U): void;\r\n    add<T>(value: T): number;\r\n    remove<T>(key: T): boolean;\r\n    clean(): void;\r\n}"]}