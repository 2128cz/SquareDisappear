{"version":3,"sources":["assets\\scripts\\base\\tool\\NoRootTree.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,2DAA6D;AAC7D,sEAAgE;AAChE;;;GAGG;AACH;IAAwC,8BAAkB;IAA1D;;IAsFA,CAAC;IA9EG,sBAAkB,kBAAI;QAHtB;;WAEG;aACH;YACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;QACD;;WAEG;aACH,UAAuB,KAAiB;YACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OANA;IAQD;;;;OAIG;IACI,wBAAG,GAAV,UAAW,MAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IACD;;;;;;OAMG;IACI,iCAAY,GAAnB,UAAoB,MAAW;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAKD,sBAAW,4BAAI;QAJf;;;WAGG;aACH;YACI,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACxB,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IACD,sBAAW,2BAAG;aAAd,cAAmB,OAAO,IAAI,CAAC,IAAI,CAAA,CAAC,CAAC;;;OAAA;IAKrC,sBAAW,4BAAI;QAJf;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;;;OAAA;IACD,sBAAW,2BAAG;aAAd,cAAmB,OAAO,IAAI,CAAC,IAAI,CAAA,CAAC,CAAC;;;OAAA;IACrC;;;;;OAKG;IACI,wBAAG,GAAV,UAA6B,GAAO;QAChC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9C,IAAI,IAAI,CAAC,YAAY;YAAE,OAAO,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5D,CAAC;IACD;;;OAGG;IACI,wBAAG,GAAV,UAAW,MAAe;QACtB,IAAI,CAAC,MAAM,IAAI,MAAM,IAAI,CAAC;YAAE,MAAM,GAAG,CAAC,CAAC;QACvC,IAAI,MAAM,GAAG,CAAC;YAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;IACvB,CAAC;IACD;;OAEG;IACI,iCAAY,GAAnB,UAAoB,KAAa,EAAE,MAAc;QAC7C,OAAO,gCAAE,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACpD,CAAC;IACD,sBAAW,8BAAM;aAAjB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IACL,iBAAC;AAAD,CAtFA,AAsFC,CAtFuC,oCAAkB,GAsFzD;;AAED,4DAA4D","file":"","sourceRoot":"/","sourcesContent":["import { RigorousRingBuffer } from '../core/RigorousLibrary';\r\nimport { mathMacro as mm } from '../class/DevelopersToolGlobal';\r\n/**\r\n * 无根树 \r\n * @tip 根据当前游戏的定义，入栈为根，出栈为叶\r\n */\r\nexport default class noRootTree extends RigorousRingBuffer {\r\n    /**\r\n     * 树实例\r\n     */\r\n    public static _NoRootTree: noRootTree;\r\n    /**\r\n     * 获取树单例\r\n     */\r\n    public static get tree() {\r\n        this._NoRootTree = this._NoRootTree || new noRootTree(30);\r\n        return this._NoRootTree;\r\n    }\r\n    /**\r\n     * 设置树单例\r\n     */\r\n    public static set tree(value: noRootTree) {\r\n        this._NoRootTree = value;\r\n    }\r\n\r\n    /**\r\n     * 添加子项\r\n     * @param object \r\n     * @returns 返回这个子项的索引\r\n     */\r\n    public add(object: any): number {\r\n        return this.push(object);\r\n    }\r\n    /**\r\n     * 反向添加子项  \r\n     * 警告：这是不符合规则的方法，请确保栈深度允许反推，\r\n     * 或是不再获取栈有效深度，因为这不会进行有效性检查，\r\n     * 会破坏数据连续性\r\n     * @param object \r\n     */\r\n    public addFromFront(object: any): number {\r\n        this.$get = this.$get - 1;\r\n        this._HashList[this.$get] = object;\r\n        return this.$get;\r\n    }\r\n    /**\r\n     * 获取根节点\r\n     * @returns \r\n     */\r\n    public get root(): any {\r\n        let put = this.$put - 1;\r\n        put = put < 0 ? this._StackSize - 1 : put;\r\n        return this.getBuffer(put);\r\n    }\r\n    public get put() { return this.$put }\r\n    /**\r\n     * 获取最末子节点\r\n     * @returns \r\n     */\r\n    public get leaf(): any {\r\n        return this.getBuffer(this.$get);\r\n    }\r\n    public get get() { return this.$get }\r\n    /**\r\n     * 从给定索引处截断，并返回截断部分\r\n     * @param key \r\n     * @return obj[]: obj3, obj4...\r\n     * @return index[]: 3, 4...\r\n     */\r\n    public cut<T extends number>(key?: T): any {\r\n        let len = (key % this._StackSize) - this.$get;\r\n        if (this._StackIsFull) return this._StackSize - len;\r\n        return this.pull(len < 0 ? this._StackSize + len : len);\r\n    }\r\n    /**\r\n     * 删除指定长度的项目\r\n     * @param length 删除的长度\r\n     */\r\n    public del(length?: number) {\r\n        if (!length || length == 0) length = 1;\r\n        if (length < 0) return this.clean();\r\n        this.$get = length;\r\n    }\r\n    /**\r\n     * 在叶子节点附近给定一个索引，并指定偏移量，转为一个有效的索引\r\n     */\r\n    public getNextIndex(index: number, offset: number): number {\r\n        return mm.PMod(index + offset, this._StackSize);\r\n    }\r\n    public get buffer() {\r\n        return this._HashList;\r\n    }\r\n}\r\n\r\n// import NTR from \"../base/tool/NoRootTree\"; // (〃´-ω･) 诶嘿~\r\n"]}