{"version":3,"sources":["assets\\scripts\\game\\BlockGroup.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAAiD;AAG3C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAwC,8BAAY;IAApD;QAEI,wBAAwB;QAF5B,qEA4DC;QAdG,aAAa;QAEb;;WAEG;QACO,eAAS,GAAW,IAAI,CAAC;QACnC;;WAEG;QACO,eAAS,GAAiB,IAAI,CAAC;QACzC;;WAEG;QACI,eAAS,GAAiB,IAAI,CAAC;;IAC1C,CAAC;IAxDG,eAAe;IAEf,0BAAK,GAAL;QACI,OAAO;QACP,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE7B,CAAC;IAED,2BAAM,GAAN,UAAO,EAAE;QACL,IAAI,GAAG,GAAG,oBAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,WAAW;IAEJ,yBAAI,GAAX,UAAY,KAAK,EAAE,SAAqB;QACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC9B;IACL,CAAC;IAED;;OAEG;IACK,sCAAiB,GAAzB;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,KAAK,GAAG,EAAE,CAAA;QACd,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK;QACnB,OAAO,IAAI,EAAE,EAAE;YACX,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YACtD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;gBACzB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvB,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBAAE,MAAM;SACjD;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;YACtC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;gBACzB,OAAO,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IA5CgB,UAAU;QAD9B,OAAO;OACa,UAAU,CA4D9B;IAAD,iBAAC;CA5DD,AA4DC,CA5DuC,EAAE,CAAC,SAAS,GA4DnD;kBA5DoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import GridAbsorb from '../base/tool/GridAdsorb';\r\nimport ss from \"./Setting\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockGroup extends cc.Component {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n        // 随机地图\r\n        this.randomizeCubeLine();\r\n\r\n    }\r\n\r\n    update(dt) {\r\n        let pos = GridAbsorb.grid.getGridPositionByIndex(new cc.Vec3(0, this.gridIndex, 0));\r\n        this.node.setPosition(0, pos.y, 0);\r\n    }\r\n\r\n    // tag 用户函数\r\n\r\n    public init(index, lastGroup: BlockGroup) {\r\n        this.gridIndex = index;\r\n        if (lastGroup) {\r\n            lastGroup.NextGroup = this;\r\n            this.lastGroup = lastGroup;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 随机化剩余方块\r\n     */\r\n    private randomizeCubeLine() {\r\n        let child = this.node.children;\r\n        let perch = []\r\n        let loop = 4; // 机会\r\n        while (loop--) {\r\n            let curcol = Math.floor(Math.random() * child.length);\r\n            if (perch.indexOf(curcol) < 0)\r\n                perch.push(curcol);\r\n            if (perch.length >= (child.length - 1)) break;\r\n        }\r\n        this.node.children.forEach((element, index) => {\r\n            if (perch.indexOf(index) <= 0)\r\n                element.destroy();\r\n        });\r\n    }\r\n\r\n    // tag 用户参数，宏\r\n\r\n    /**\r\n     * 此组代表的索引\r\n     */\r\n    protected gridIndex: number = null;\r\n    /**\r\n     * 处于此组下方的组\r\n     */\r\n    protected lastGroup: cc.Component = null;\r\n    /**\r\n     * 处于此组上方的组\r\n     */\r\n    public NextGroup: cc.Component = null;\r\n}"]}