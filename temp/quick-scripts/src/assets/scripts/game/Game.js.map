{"version":3,"sources":["assets\\scripts\\game\\Game.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEA4CC;QAzCG,WAAK,GAAa,IAAI,CAAC;QAGvB,UAAI,GAAW,OAAO,CAAC;;IAsC3B,CAAC;IApCG,wBAAwB;IAExB,eAAe;IAEf,wBAAK,GAAL;IAEA,CAAC;IAED,iBAAiB;IAEjB,yGAAyG;IAEzG;;OAEG;IACO,wCAAqB,GAA/B;IAEA,CAAC;IAED,yGAAyG;IAEzG,yGAAyG;IAEzG;;;;;OAKG;IACO,6BAAU,GAApB,UAAqB,KAAgB,EAAE,MAAgB;QACnD,IAAI,SAAS,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,MAAM,EAAE;YAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAAE;aACtC;YAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;SAAE;QACzD,OAAO,SAAS,CAAC;IACrB,CAAC;IAvCD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;2CACI;IAGvB;QADC,QAAQ;0CACc;IANN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA4C5B;IAAD,eAAC;CA5CD,AA4CC,CA5CqC,EAAE,CAAC,SAAS,GA4CjD;kBA5CoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n\r\n    // TAG USER FUNCTION:                                                                                    \r\n\r\n    /**\r\n     * 游戏流程\r\n     */\r\n    protected gameProcess_SpawnLine() {\r\n\r\n    }\r\n\r\n    // TAG Prefabricated function                                                                            \r\n\r\n    // SIGNPOST instantiation and destory Actor                                                              \r\n\r\n    /**\r\n     * creat instantiate\r\n     * @param {cc.Prefab} actor 实例化的目标\r\n     * @param {cc.Node} parent 实例化的对象将要附加的目标，如果留空则为自身\r\n     * @returns \r\n     */\r\n    protected creatActor(actor: cc.Prefab, parent?: cc.Node) {\r\n        let actorInst = cc.instantiate(actor);\r\n        if (parent) { parent.addChild(actorInst); }\r\n        else { this.node.addChild(actorInst); cc.log(actorInst) }\r\n        return actorInst;\r\n    }\r\n\r\n}\r\n\r\n"]}