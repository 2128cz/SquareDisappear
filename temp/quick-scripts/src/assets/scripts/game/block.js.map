{"version":3,"sources":["assets\\scripts\\game\\Block.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2EAAkF;AAClF,0DAAqD;AAErD,qCAA2B;AAErB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAEI,wBAAwB;QAF5B,qEA0FC;QAtBG;;;;WAIG;QACH,kCAAkC;QAClC;;;;WAIG;QACH,kCAAkC;QAElC,aAAa;QACb;;WAEG;QACO,cAAQ,GAAY,KAAK,CAAC;QACpC;;WAEG;QACO,cAAQ,GAAW,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAE,CAAC,SAAS,CAAC;;IAClE,CAAC;IAtFG,eAAe;IAEf,wBAAK,GAAL;IAEA,CAAC;IAED,yBAAM,GAAN,UAAO,EAAE;QACL,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YACxC,0DAA0D;SAC7D;IACL,CAAC;IAED,YAAY;IAEZ;;;OAGG;IACI,uBAAI,GAAX;QACI,QAAQ;QACR,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,iBAAE,CAAC,OAAO,CAAC;QAC7B,OAAO;QACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,SAAS;QACT,IAAI,QAAQ,GAAiB,IAAI,sBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;QACtB,QAAQ,CAAC,SAAS,GAAG,iBAAE,CAAC,UAAU,CAAC;QACnC,QAAQ,CAAC,QAAQ,GAAG,iBAAE,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;QACjC,sCAAsC;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzD,CAAC;IACD,OAAO;IACA,gCAAa,GAApB,cAAyB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAE/C,YAAY;IAEZ;;;;OAIG;IACI,mCAAgB,GAAvB,UAAwB,KAAK,EAAE,IAAI;QAC/B,WAAW;QACX,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,UAAU;YACV,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,WAAW;YACX,IAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC;YAC9B,IAAI,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;YACrC,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvE,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;YACD,cAAc;iBACT;gBACD,IAAI,cAAc,GAAG,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;gBAC9C,SAAS,GAAG,2CAAI,CAAC,WAAW,CAAC,cAAc,CAAC,cAAc,EAAE,UAAU,CAAC,YAAY,CAAC,iBAAE,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxG,IAAI,kBAAkB,GAAG,SAAS,CAAC,YAAY,EAAE,CAAC;aACrD;SACJ;IAEL,CAAC;IAnEgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA0F5B;IAAD,eAAC;CA1FD,AA0FC,CA1FqC,EAAE,CAAC,SAAS,GA0FjD;kBA1FoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import { DevelopersToolGlobal as ccvv } from \"../base/class/DevelopersToolGlobal\";\r\nimport PawnMovement from \"../base/tool/PawnMovement\";\r\nimport BlockGroup from \"./BlockGroup\";\r\nimport ss from \"./Setting\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.moveFree) {\r\n            this.node['movement'].updateByforce(dt);\r\n            // this.node['movement'].updateByVelocity(dt); // 也可以用这个方法\r\n        }\r\n    }\r\n\r\n    // tag 用户脚本 \r\n\r\n    /**\r\n     * 如果进行初始化，说明是玩家控制  \r\n     * 否则如果是系统生成不需要初始化\r\n     */\r\n    public init(): void {\r\n        // 设定碰撞组\r\n        this.node.group = ss.Group_1;\r\n        // 设定移动\r\n        this.moveFree = true;\r\n        // 赋予移动组件\r\n        let movement: PawnMovement = new PawnMovement(this.node);\r\n        movement.permDrag = 0;\r\n        movement.permForce = ss.CubeVector;\r\n        movement.velocity = ss.CubeVector;\r\n        this.node['movement'] = movement;\r\n        // 定义一定时间后销毁，但是如果遇到碰撞或是其他情况，就必须取消这个定时器\r\n        this.scheduleOnce(this.commitSuicide, this.lifeTime);\r\n    }\r\n    // 自我销毁\r\n    public commitSuicide() { this.node.destroy(); }\r\n\r\n    // tag 碰撞事件 \r\n\r\n    /**\r\n     * 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    public onCollisionEnter(other, self) {\r\n        // 如果正在自由移动\r\n        if (this.moveFree) {\r\n            // 就禁止自由移动\r\n            this.moveFree = false;\r\n            // 试着加入到其他组\r\n            let otherGroup = other.parent;\r\n            let selfGroup = otherGroup.lastGroup;\r\n            if (selfGroup) {\r\n                this.node.setPosition(0, selfGroup.node.children[0].getPostion().y, 0);\r\n                selfGroup.addChild(this.node);\r\n            }\r\n            // 如果不可以加入，就创建\r\n            else {\r\n                let selfGroupIndex = otherGroup.gridIndex - 1;\r\n                selfGroup = ccvv.fristScript.SpawnCubeGroup(selfGroupIndex, otherGroup.getComponent(ss.blockGroupName));\r\n                let selfGroupComponent = selfGroup.getComponent();\r\n            }\r\n        }\r\n\r\n    }\r\n    /**\r\n     * 当碰撞产生后，碰撞结束前的情况下，每次计算碰撞结果后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    // onCollisionStay(other, self) {}\r\n    /**\r\n     * 当碰撞结束后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    // onCollisionExit(other, self) {}\r\n\r\n    // tag 用户宏，参数\r\n    /**\r\n     * 自由移动标记\r\n     */\r\n    protected moveFree: boolean = false;\r\n    /**\r\n     * 生命周期\r\n     */\r\n    protected lifeTime: number = cc.winSize.height / ss.CubeSpeed;\r\n}\r\n"]}