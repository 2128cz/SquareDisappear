{"version":3,"sources":["assets\\scripts\\game\\Setting.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { DevelopersToolGlobal as ccvv } from \"../base/class/DevelopersToolGlobal\";\r\nimport GridAbsorb from '../base/tool/GridAdsorb';\r\n// 游戏固定参数设定\r\nexport default class Setting {\r\n    // 基本常量定义\r\n    public static get Game_Column(): number { return 4; }\r\n    public static get Game_Row(): number { return 15; }\r\n    public static get Game_Row2(): number { return 15; }\r\n\r\n    public static get Cube_width(): number { return 177; }\r\n    public static get Cube_Height(): number { return 100; }\r\n    public static get Cube_Interaval(): number { return 3.5; }\r\n    // 底部截止线，用于生成方块位置和判断是否结束游戏\r\n    public static get Separator(): number { return -379.4; }\r\n    // 碰撞组\r\n    public static get Group_0(): string { return 'default' }\r\n    public static get Group_1(): string { return 'player' }\r\n\r\n    // 设定参数定义\r\n    protected static _GameSpeed: number = 100;\r\n    public static get GameSpeed(): number { return this._GameSpeed; }\r\n    public static set GameSpeed(value) { this._GameSpeed = value; }\r\n    public static get GameVector(): cc.Vec3 { return new cc.Vec3(0, -this._GameSpeed, 0); }\r\n\r\n    protected static _CubeSpeed: number = 400;\r\n    public static get CubeSpeed(): number { return this._CubeSpeed; }\r\n    public static set CubeSpeed(value) { this._CubeSpeed = value; }\r\n    public static get CubeVector(): cc.Vec3 { return new cc.Vec3(0, this._CubeSpeed, 0); }\r\n\r\n    // 网格指针\r\n    protected static _GridCurrentPoint: number = 0;\r\n    public static get GridCurrentPoint(): number { return this._GridCurrentPoint }\r\n    public static set GridCurrentPoint(value) { this._GridCurrentPoint = value }\r\n    public static get GridCurrentPointToVec(): cc.Vec3 { return new cc.Vec3(0, this._GridCurrentPoint, 0) }\r\n    public static get GridPointer(): number { return this._GridCurrentPoint++; }\r\n    public static set GridPointer(value) { this._GridCurrentPoint += value }\r\n\r\n    // 网格参数\r\n    public static get GridOriginOffset(): cc.Vec3 { return new cc.Vec3(0, GridAbsorb.grid.gridSize.y / 2 + cc.winSize.height / 2, 0) }\r\n\r\n    // 资源常量定义\r\n    public static get Square() { return ccvv.warehouse['prefabs']['Square'] }\r\n    public static get SquareGroup() { return ccvv.warehouse['prefabs']['Square Node'] }\r\n\r\n    // 资产常量定义\r\n    public static get blockName() { return 'Block' }\r\n    public static get blockGroupName() { return 'BlockGroup' }\r\n}"]}