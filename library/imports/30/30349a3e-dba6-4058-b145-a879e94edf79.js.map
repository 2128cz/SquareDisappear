{"version":3,"sources":["assets\\scripts\\base\\tool\\NoRootTree.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,4DAA8D;AAC9D;;;GAGG;AACH;IAAwC,8BAAkB;IAA1D;;IAqDA,CAAC;IAhDG,sBAAkB,kBAAI;aAAtB;YACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aACD,UAAuB,KAAiB;YACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAHA;IAKD;;;;OAIG;IACI,wBAAG,GAAV,UAAW,MAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAKD,sBAAW,4BAAI;QAJf;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;;;OAAA;IAKD,sBAAW,4BAAI;QAJf;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;;;OAAA;IACD;;;OAGG;IACI,wBAAG,GAAV,UAA6B,GAAO;QAChC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9C,IAAI,IAAI,CAAC,YAAY;YAAE,OAAO,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5D,CAAC;IACD;;;OAGG;IACI,wBAAG,GAAV,UAAW,MAAe;QACtB,IAAI,CAAC,MAAM,IAAI,MAAM,IAAI,CAAC;YAAE,MAAM,GAAG,CAAC,CAAC;QACvC,IAAI,MAAM,GAAG,CAAC;YAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;IACvB,CAAC;IACL,iBAAC;AAAD,CArDA,AAqDC,CArDuC,oCAAkB,GAqDzD;;AAED,4DAA4D","file":"","sourceRoot":"/","sourcesContent":["import { RigorousRingBuffer } from '../class/RigorousLibrary';\r\n/**\r\n * 无根树 \r\n * @tip 根据当前游戏的定义，入栈为根，出栈为叶\r\n */\r\nexport default class noRootTree extends RigorousRingBuffer {\r\n    /**\r\n     * 树实例\r\n     */\r\n    public static _NoRootTree: noRootTree;\r\n    public static get tree() {\r\n        this._NoRootTree = this._NoRootTree || new noRootTree(30);\r\n        return this._NoRootTree;\r\n    }\r\n    public static set tree(value: noRootTree) {\r\n        this._NoRootTree = value;\r\n    }\r\n\r\n    /**\r\n     * 添加子项\r\n     * @param object \r\n     * @returns 返回这个子项的索引\r\n     */\r\n    public add(object: any): number {\r\n        return this.push(object);\r\n    }\r\n    /**\r\n     * 获取根节点\r\n     * @returns \r\n     */\r\n    public get root(): any {\r\n        return this.getBuffer(this.$put);\r\n    }\r\n    /**\r\n     * 获取最末子节点\r\n     * @returns \r\n     */\r\n    public get leaf(): any {\r\n        return this.getBuffer(this.$get);\r\n    }\r\n    /**\r\n     * 从给定索引处截断，并返回截断部分\r\n     * @param key \r\n     */\r\n    public cut<T extends number>(key?: T): any {\r\n        let len = (key % this._StackSize) - this.$get;\r\n        if (this._StackIsFull) return this._StackSize - len;\r\n        return this.pull(len < 0 ? this._StackSize + len : len);\r\n    }\r\n    /**\r\n     * 删除指定长度的项目\r\n     * @param length 删除的长度\r\n     */\r\n    public del(length?: number) {\r\n        if (!length || length == 0) length = 1;\r\n        if (length < 0) return this.clean();\r\n        this.$get = length;\r\n    }\r\n}\r\n\r\n// import NTR from \"../base/tool/NoRootTree\"; // (〃´-ω･) 诶嘿~\r\n"]}