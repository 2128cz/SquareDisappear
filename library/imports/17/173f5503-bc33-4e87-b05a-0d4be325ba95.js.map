{"version":3,"sources":["assets\\scripts\\base\\class\\RigorousLibrary.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// 苛刻库\r\nenum SysBaseType {\r\n    number, string, boolean, object, undefined\r\n}\r\nexport class RigorousValueType {\r\n\r\n}\r\nexport class RigorousVector4 extends RigorousValueType {\r\n\r\n}\r\nexport class RigorousVector3 extends RigorousVector4 {\r\n\r\n}\r\nexport class RigorousPostion extends RigorousVector3 {\r\n\r\n}\r\nexport class RigorousRotation extends RigorousVector3 {\r\n\r\n}\r\nexport class RigorousScale extends RigorousVector3 {\r\n\r\n}\r\nexport class RigorousVector2 extends RigorousVector4 {\r\n\r\n}\r\nexport class RigorousSize extends RigorousVector2 {\r\n\r\n}\r\nexport class RigorousMatrix4 extends RigorousValueType {\r\n\r\n}\r\nexport class RigorousMatrix3 extends RigorousMatrix4 {\r\n\r\n}\r\nexport class RigorousMatrix2 extends RigorousMatrix4 {\r\n\r\n}\r\nimport { Ihash } from './RigorousType';\r\nexport class RigorousHash extends RigorousValueType implements Ihash {\r\n    /**\r\n     * @param length 定义哈希表的使用场景最大长度\r\n     */\r\n    constructor(length?: number) {\r\n        super();\r\n        this.HashCodeGate = length ? length > 50 : true;\r\n        this._HashList = {};\r\n    }\r\n\r\n    /**\r\n     * 哈希表\r\n     */\r\n    protected declare _HashList: any[number];\r\n\r\n    /**\r\n     * 获取一个字符的哈希值\r\n     * @param code \r\n     */\r\n    protected ToHashCode_ShortWay(code: number | string): number {\r\n        let hash: number = 0;\r\n        if (typeof (code) == 'number') {\r\n            hash = code as number;\r\n        } else {\r\n            for (const iterator of code) {\r\n                hash += iterator.charCodeAt(0);\r\n            }\r\n            // HashComplexity\r\n            hash %= 37;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    protected ToHashCode_LongWay(code: number | string): number {\r\n        let hash: number = 5381;\r\n        if (typeof (code) == 'number') {\r\n            hash = code as number;\r\n        } else {\r\n            for (const iterator of code) {\r\n                hash *= 33;\r\n                hash += iterator.charCodeAt(0);\r\n            }\r\n            hash %= 1013;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    protected HashCodeGate: boolean = false;\r\n    /**\r\n     * 获取哈希值的选择器\r\n     */\r\n    protected ToHashCode(key: number | string): number {\r\n        if (this.HashCodeGate)\r\n            return this.ToHashCode_ShortWay(key);\r\n        else\r\n            return this.ToHashCode_LongWay(key);\r\n    }\r\n\r\n    /**\r\n     * 按键获取元素\r\n     * @param key 键\r\n     */\r\n    public get(key) {\r\n        let hash = this.ToHashCode(key);\r\n        return this._HashList[hash];\r\n    }\r\n\r\n    /**\r\n     * 按键设置元素\r\n     * @param key 键\r\n     */\r\n    public set(key, value) {\r\n        let hash = this.ToHashCode(key);\r\n        this._HashList[hash] = value;\r\n    }\r\n\r\n    /**\r\n     * 按键删除元素\r\n     * @param key 键\r\n     */\r\n    public remove(key) {\r\n        let hash = this.ToHashCode(key);\r\n        if (this._HashList[hash]) {\r\n            this._HashList[hash].destroy();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 清除\r\n     */\r\n    public clean() {\r\n        this._HashList = [];\r\n    }\r\n}\r\nexport class RigorousSet extends RigorousHash {\r\n\r\n}\r\nexport class RigorousMap extends RigorousHash {\r\n    public set(key: any, value: any): number {\r\n        let objectTagName: string | number;\r\n        switch (SysBaseType[typeof (value)]) {\r\n            case SysBaseType.object:\r\n                objectTagName = Object.prototype.toString.call(value);\r\n                if (value instanceof cc.Component)\r\n                    objectTagName += value['_id'];\r\n                else {\r\n                    let ObjectKey = Object.keys(value);\r\n                    objectTagName += ObjectKey[114514 % ObjectKey.length];\r\n                    objectTagName += ObjectKey[4399 % ObjectKey.length];\r\n                    objectTagName += ObjectKey[8848 % ObjectKey.length];\r\n                }\r\n                key = objectTagName;\r\n                break;\r\n            case SysBaseType.string:\r\n                key = value;\r\n                break;\r\n            case SysBaseType.number:\r\n                key = value;\r\n                break;\r\n            case SysBaseType.boolean:\r\n                key = value ? 1 : 0;\r\n                break;\r\n            case SysBaseType.undefined:\r\n                key = 0;\r\n                break;\r\n            default:\r\n                key = 0;\r\n                break;\r\n        }\r\n        let hash = this.ToHashCode(key);\r\n        this._HashList[hash] = value;\r\n        return hash;\r\n    }\r\n}\r\nimport { Iarray } from './RigorousType';\r\nexport class RigorousArray extends RigorousValueType implements Iarray {\r\n    /**\r\n     * \r\n     */\r\n    constructor() {\r\n        super();\r\n        this._HashList = [];\r\n    }\r\n\r\n    /**\r\n     * 数组\r\n     */\r\n    protected declare _HashList: any[number];\r\n    /**\r\n     * \r\n     * @param key \r\n     * @returns \r\n     */\r\n    public get<T extends number>(key: T) {\r\n        return this._HashList[key];\r\n    }\r\n    /**\r\n     * \r\n     * @param key \r\n     * @param value \r\n     */\r\n    public set<T extends number, U>(key: T, value: U): void {\r\n        this._HashList[key] = value;\r\n    }\r\n    /**\r\n     * 添加一个项目到末尾\r\n     * @param value \r\n     * @returns \r\n     */\r\n    public add<T>(value: T): number {\r\n        return this._HashList.push(value);\r\n    }\r\n    /**\r\n     * 按键移除\r\n     */\r\n    public remove<T extends number>(key: T): void {\r\n        this._HashList[key] = null;\r\n    }\r\n    /**\r\n     * 清除\r\n     */\r\n    public clean() {\r\n        this._HashList = [];\r\n    }\r\n}\r\nimport { IringBuffer } from './RigorousType';\r\nexport class RigorousRingBuffer extends RigorousArray implements IringBuffer {\r\n    /**\r\n     * 初始化栈 \r\n     * 注意：只是为了简单模仿，原理不完全一样\r\n     */\r\n    constructor(size: number) {\r\n        super();\r\n        this._StackGetPointer = 0;\r\n        this._StackPutPointer = 0;\r\n        this._StackSize = size\r\n    }\r\n    /**\r\n     * 出栈指针 \r\n     */\r\n    protected declare _StackGetPointer: number;\r\n    /**\r\n     * 进栈指针 \r\n     */\r\n    protected declare _StackPutPointer: number;\r\n    /**\r\n     * 栈深度\r\n     */\r\n    protected declare _StackSize: number;\r\n\r\n    /**\r\n     * 获取栈有效长度\r\n     */\r\n    public get length(): number {\r\n        return\r\n    }\r\n    /**\r\n     * 直接获取索引项目 \r\n     * 这不会触发栈指针变化\r\n     */\r\n    public get buffer(): number {\r\n        return\r\n    }\r\n    /**\r\n     * 进栈\r\n     * @param object \r\n     */\r\n    public push<T>(object: T): number {\r\n        this._StackPutPointer = ++this._StackPutPointer % this._StackSize;\r\n        if (this._StackPutPointer == this._StackGetPointer) this._StackGetPointer++;\r\n        this._HashList[this._StackPutPointer] = object;\r\n        return this._StackPutPointer;\r\n    }\r\n    /**\r\n     * 出栈\r\n     * @param length \r\n     */\r\n    public pull<T extends number>(length: number) {\r\n        let out = [];\r\n        for (let index = 0; index < length; index++) {\r\n            out.push(this._HashList[index]);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 清空栈\r\n     */\r\n    public clean(): void {\r\n\r\n    }\r\n}\r\n\r\n\r\n// 测试\r\n// interface kismitFloat {\r\n//     _num: Number;\r\n// }\r\n\r\n// class myfloat implements kismitFloat {\r\n//     constructor(value?: number) {\r\n//         this._num = value || 0;\r\n//     }\r\n//     _num;\r\n//     get num() {\r\n//         return this._num;\r\n//     }\r\n//     set num(value: number) {\r\n//         this._num = value;\r\n//     }\r\n// }\r\n// let a = new myfloat(1);\r\n// cc.log(a.num);"]}