{"version":3,"sources":["assets\\scripts\\base\\class\\RigorousLibrary.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// kismit\r\nenum SysBaseType {\r\n    number, string, boolean, object, undefined\r\n}\r\nexport class RigorousValueType {\r\n\r\n}\r\nexport class RigorousVector4 extends RigorousValueType {\r\n\r\n}\r\nexport class RigorousVector3 extends RigorousVector4 {\r\n\r\n}\r\nexport class RigorousPostion extends RigorousVector3 {\r\n\r\n}\r\nexport class RigorousRotation extends RigorousVector3 {\r\n\r\n}\r\nexport class RigorousScale extends RigorousVector3 {\r\n\r\n}\r\nexport class RigorousVector2 extends RigorousVector4 {\r\n\r\n}\r\nexport class RigorousSize extends RigorousVector2 {\r\n\r\n}\r\nexport class RigorousMatrix4 extends RigorousValueType {\r\n\r\n}\r\nexport class RigorousMatrix3 extends RigorousMatrix4 {\r\n\r\n}\r\nexport class RigorousMatrix2 extends RigorousMatrix4 {\r\n\r\n}\r\nexport class RigorousHash extends RigorousValueType {\r\n    /**\r\n     * @param length 定义哈希表的使用场景最大长度\r\n     */\r\n    constructor(length: number) {\r\n        super();\r\n        this.HashCodeGate = length > 50;\r\n    }\r\n\r\n    /**\r\n     * 哈希表\r\n     */\r\n    protected _HashList = {};\r\n\r\n    /**\r\n     * 获取一个字符的哈希值\r\n     * @param code \r\n     */\r\n    protected ToHashCode(code: number | string): number {\r\n        let hash: number = 0;\r\n        if (typeof (code) == 'number') {\r\n            hash = code as number;\r\n        } else {\r\n            for (const iterator of code) {\r\n                hash += iterator.charCodeAt(0);\r\n            }\r\n            // HashComplexity\r\n            hash %= 37;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    protected ToHashCode2(code: number | string): number {\r\n        let hash: number = 5381;\r\n        if (typeof (code) == 'number') {\r\n            hash = code as number;\r\n        } else {\r\n            for (const iterator of code) {\r\n                hash *= 33;\r\n                hash += iterator.charCodeAt(0);\r\n            }\r\n            hash %= 1013;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    protected HashCodeGate: boolean = false;\r\n    /**\r\n     * 获取哈希值的选择器\r\n     */\r\n    protected ToHashCodeGate(key: number | string): number {\r\n        if (this.HashCodeGate)\r\n            return this.ToHashCode(key);\r\n        else\r\n            return this.ToHashCode2(key);\r\n    }\r\n\r\n    // tag 交互层 \r\n\r\n    /**\r\n     * 按键获取元素\r\n     * @param key 键\r\n     */\r\n    public get(key: number | string): any {\r\n        let hash = this.ToHashCodeGate(key);\r\n        this._HashList[hash]\r\n    }\r\n\r\n    /**\r\n     * 按键设置元素\r\n     * @param key 键\r\n     */\r\n    public set(value: any): number {\r\n        let key: number | string = null;\r\n        switch (SysBaseType[typeof (value)]) {\r\n            case SysBaseType.object:\r\n                let objectTagName = Object.prototype.toString.call(value);\r\n                if (value instanceof cc.Component)\r\n                    objectTagName += value['_id'];\r\n                else {\r\n                    let ObjectKey = Object.keys(value);\r\n                    objectTagName += ObjectKey[114514 % ObjectKey.length];\r\n                    objectTagName += ObjectKey[4399 % ObjectKey.length];\r\n                    objectTagName += ObjectKey[8848 % ObjectKey.length];\r\n                }\r\n                key = objectTagName;\r\n                break;\r\n            case SysBaseType.string:\r\n                key = value;\r\n                break;\r\n            case SysBaseType.number:\r\n                key = value;\r\n                break;\r\n            case SysBaseType.boolean:\r\n                key = value ? 1 : 0;\r\n                break;\r\n            case SysBaseType.undefined:\r\n                key = 0;\r\n                break;\r\n            default:\r\n                key = 0;\r\n                break;\r\n        }\r\n        let hash = this.ToHashCodeGate(key);\r\n        this._HashList[hash] = value;\r\n        return hash;\r\n    }\r\n\r\n    /**\r\n     * 按键删除元素\r\n     * @param key 键\r\n     */\r\n    public remove(key: number | string): void {\r\n        let hash = this.ToHashCodeGate(key);\r\n    }\r\n}\r\nexport class RigorousArray extends RigorousHash {\r\n\r\n}\r\nexport class RigorousRingBuffer extends RigorousArray {\r\n\r\n}\r\nexport class RigorousSet extends RigorousHash {\r\n\r\n}\r\nexport class RigorousMap extends RigorousHash {\r\n\r\n}\r\n\r\n// 测试\r\n// interface kismitFloat {\r\n//     _num: Number;\r\n// }\r\n\r\n// class myfloat implements kismitFloat {\r\n//     constructor(value?: number) {\r\n//         this._num = value || 0;\r\n//     }\r\n//     _num;\r\n//     get num() {\r\n//         return this._num;\r\n//     }\r\n//     set num(value: number) {\r\n//         this._num = value;\r\n//     }\r\n// }\r\n// let a = new myfloat(1);\r\n// cc.log(a.num);"]}