{"version":3,"sources":["assets\\scripts\\base\\tool\\PanelTool.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAA6E;AAEvE,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAE5C;IAAuC,6BAAY;IAAnD;QAAA,qEA2CC;QAnCG,mBAAa,GAAa,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;;IAmCzF,CAAC;IAjCG,wBAAwB;IACxB,0BAAM,GAAN;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAChC;;WAEG;QACH,IAAI,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;YAC/D,IAAI,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;YAC/B,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC;gBAAE,SAAS;YAE5C,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,iBAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE;gBAEvE,IAAI,KAAK,CAAC,IAAI,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;oBAC5C,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;oBACpC,IAAI,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;oBAClC,2CAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;oBACtB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;oBACnC,MAAM;iBACT;aACJ;SACJ;IAEL,CAAC;IAED;;;OAGG;IACO,uCAAmB,GAA7B,UAA8B,IAAa;QACvC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAjCD;QANC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,MAAM;YACf,WAAW,EAAE,OAAO;YACpB,OAAO,EAAE,gDAAgD;YACzD,OAAO,EAAE,IAAI;SAChB,CAAC;oDACmF;IARpE,SAAS;QAD7B,OAAO;OACa,SAAS,CA2C7B;IAAD,gBAAC;CA3CD,AA2CC,CA3CsC,EAAE,CAAC,SAAS,GA2ClD;kBA3CoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import { DevelopersToolGlobal as ccvv } from '../class/DevelopersToolGlobal';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class PanelTool extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.String,\r\n        displayName: '通用层名单',\r\n        tooltip: '层按放置顺序设定优先级，与名称顺序无关，默认关闭所有层级，需要在canvas下的脚本进行打开',\r\n        visible: true,\r\n    })\r\n    _generalLayer: string[] = ['BackgroundLayer', 'EternalityUILayer', 'DynamicUILayer'];\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        let layers = this.node.children;\r\n        /**\r\n         * 可用的剩余层\r\n         */\r\n        let residueLayersName = this._generalLayer;\r\n        for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\r\n            let layer = layers[layerIndex];\r\n            if (layer.getComponent(cc.Camera)) continue;\r\n\r\n            for (let nameIndex = 0; nameIndex < residueLayersName.length; nameIndex++) {\r\n\r\n                if (layer.name == residueLayersName[nameIndex]) {\r\n                    residueLayersName[nameIndex] = null;\r\n                    let nowlayer = layers[layerIndex];\r\n                    ccvv.layer = nowlayer;\r\n                    this.LayerDefaultSetting(nowlayer);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 层初始设定\r\n     * @param node \r\n     */\r\n    protected LayerDefaultSetting(node: cc.Node) {\r\n        node.active = false;\r\n    }\r\n\r\n}\r\n\r\n"]}