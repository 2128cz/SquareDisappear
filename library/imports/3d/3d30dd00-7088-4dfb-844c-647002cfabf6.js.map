{"version":3,"sources":["assets\\scripts\\base\\class\\GridAdsorb.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class GridAbsorb {\r\n\r\n    protected static _ExclusiveGrid: GridAbsorb = null;\r\n    /**\r\n     * 获取静态唯一网格实例\r\n     */\r\n    public static get grid() {\r\n        this._ExclusiveGrid = this._ExclusiveGrid || new GridAbsorb()\r\n        return this._ExclusiveGrid;\r\n    }\r\n    /**\r\n     * 将实例设置到静态唯一网格实例\r\n     */\r\n    public static set grid(grid: GridAbsorb) {\r\n        this._ExclusiveGrid = grid;\r\n    }\r\n\r\n    /**\r\n     * 网格对齐\r\n     * 创建的同时，如果类单例中不存在实例，则将此实例赋予到类单例中\r\n     */\r\n    constructor(axisNum?: cc.Vec3, cellSize?: cc.Vec3) {\r\n        if (axisNum) {\r\n            this.cellNum = axisNum;\r\n            if (cellSize)\r\n                this.cellSize = cellSize;\r\n        }\r\n        if (!GridAbsorb._ExclusiveGrid) {\r\n            GridAbsorb._ExclusiveGrid = this;\r\n        }\r\n    }\r\n\r\n    protected _CellSize: cc.Vec3 = new cc.Vec3(100);\r\n    /**\r\n     * 获取单元格尺寸\r\n     */\r\n    public get cellSize(): cc.Vec3 {\r\n        return this._CellSize;\r\n    }\r\n    /**\r\n     * 设置单元格尺寸\r\n     */\r\n    public set cellSize(size: cc.Vec3) {\r\n        this._CellSize = size;\r\n    }\r\n\r\n    protected _GridOffset: cc.Vec3 = new cc.Vec3(0);\r\n    /**\r\n     * 获取网格偏移量\r\n     */\r\n    public get offset(): cc.Vec3 {\r\n        return this._GridOffset;\r\n    }\r\n    /**\r\n     * 设置网格偏移量  \r\n     */\r\n    public set offset(offset: cc.Vec3) {\r\n        let newOffset = this._GridOffset.add(offset);\r\n        function vecMod(axis: string): number {\r\n            return newOffset[axis] % this.gridSize[axis];\r\n        }\r\n        this._GridOffset = new cc.Vec3(vecMod('x'), vecMod('y'), vecMod('z'))\r\n    }\r\n\r\n    protected _GridSize: cc.Vec3 = new cc.Vec3(0);\r\n    /**\r\n     * 获取网格偏移量\r\n     */\r\n    public get gridSize(): cc.Vec3 {\r\n        return this._GridOffset;\r\n    }\r\n    /**\r\n     * 设置网格偏移量\r\n     */\r\n    public set gridSize(offset: cc.Vec3) {\r\n        this._GridOffset = offset;\r\n    }\r\n\r\n    protected _GridAxisCellNum: cc.Vec3 = new cc.Vec3(100);\r\n    /**\r\n     * 获取网格轴晶格数量\r\n     */\r\n    public get cellNum(): cc.Vec3 {\r\n        return this._GridAxisCellNum;\r\n    }\r\n    /**\r\n     * 设置网格轴晶格数量\r\n     */\r\n    public set cellNum(num: cc.Vec3) {\r\n        this._GridAxisCellNum = num;\r\n    }\r\n\r\n    // + -\r\n    protected _GridEdgeAnchor_X: cc.Vec2 = new cc.Vec2(.5, .5);\r\n    protected _GridEdgeAnchor_Y: cc.Vec2 = new cc.Vec2(.5, .5);\r\n    protected _GridEdgeAnchor_Z: cc.Vec2 = new cc.Vec2(.5, .5);\r\n    /**\r\n     * 获取网格边缘锚点  \r\n     * 取值在[0, 1]\r\n     */\r\n    public get anchor(): cc.Vec3 {\r\n        function toAlige(vec: cc.Vec2) {\r\n            return (vec.x - vec.y + 1) / 2;\r\n        }\r\n        return new cc.Vec3(\r\n            toAlige(this._GridEdgeAnchor_X),\r\n            toAlige(this._GridEdgeAnchor_Y),\r\n            toAlige(this._GridEdgeAnchor_Z)\r\n        );\r\n    }\r\n    /**\r\n     * 设置网格边缘锚点\r\n     * 取值在[0, 1]，跟随引擎\r\n     */\r\n    public set anchor(anchor: cc.Vec3) {\r\n        function toAnchor(num: number) {\r\n            if (!num) return new cc.Vec2(.5);\r\n            let axis = Math.max(Math.min(num, 1), 0) - .5;\r\n            return new cc.Vec2(.5 - axis, .5 + axis);\r\n        }\r\n        this._GridEdgeAnchor_X = toAnchor(anchor.x);\r\n        this._GridEdgeAnchor_Y = toAnchor(anchor.y);\r\n        this._GridEdgeAnchor_Z = toAnchor(anchor.z);\r\n    }\r\n\r\n    // SIGNPOST 网格查找                                                                                \r\n\r\n    /** \r\n     * 从各轴索引获得网格坐标\r\n     * cocos和unity都是y轴向上，xz为平面\r\n     * 为了适配平面坐标，z为深度轴\r\n     * @param {intVec3} index\r\n     * @return {int}\r\n     */\r\n    public getGridPositionByIndex<T extends cc.Vec3 | cc.Vec2>(index: T): T {\r\n        function getPos(axis) {\r\n            return (Math.floor(index[axis]) % this.cellNum[axis]) // 唯一不稳定因素\r\n                * this.cellSize[axis] + this.offset[axis];\r\n        }\r\n        let x = getPos('x');\r\n        let y = getPos('y');\r\n        if (index instanceof cc.Vec3) {\r\n            let z = getPos('z');\r\n            return new cc.Vec3(x, y, z) as T;\r\n        }\r\n        return new cc.Vec2(x, y) as T;\r\n    }\r\n\r\n}"]}