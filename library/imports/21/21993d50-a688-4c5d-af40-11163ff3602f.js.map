{"version":3,"sources":["assets\\scripts\\game\\GameLevel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { DevelopersToolGlobal as ccvv, mathMacro as mm } from '../base/class/DevelopersToolGlobal';\r\nimport NTR from \"../base/tool/NoRootTree\";\r\n// (〃´-ω･) 诶嘿~\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class Game extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        ccvv.script = this;\r\n        // cc.log(ccvv.fristScript)\r\n        // cc.log(ccvv.warehouse);\r\n        // ccvv.layers[0].addChild(new ccvv.warehouse['frames']['bg'])\r\n    }\r\n\r\n    start() {\r\n        this.creat_lineCube()\r\n    }\r\n\r\n    update(dt) {\r\n        this.gameProcess_SpawnCube();\r\n    }\r\n\r\n    // TAG USER FUNCTION:                                                                                    \r\n\r\n    /**\r\n     * 游戏流程-诞生方块\r\n     */\r\n    protected gameProcess_SpawnCube() {\r\n        if (this.curRoot) {// && mm.isInBox2(cubePos)\r\n            let cubePos = new mm(this.curRoot.node.getPostion());\r\n\r\n            cc.log(cubePos);\r\n        }\r\n        else {\r\n            // this.creat_lineCube();\r\n        }\r\n        // NTR.tree.push();\r\n    }\r\n\r\n    /**\r\n     * 返回目标根节点\r\n     */\r\n    protected get curRoot() {\r\n        if (NTR.tree.root)\r\n            return NTR.tree.root[0];\r\n        else\r\n            return undefined;\r\n    }\r\n\r\n    protected cheackIs\r\n\r\n\r\n\r\n    // TAG Prefabricated function                                                                            \r\n\r\n    // SIGNPOST instantiation and destory Actor                                                              \r\n\r\n    /**\r\n     * 创建一行方块\r\n     */\r\n    public creat_lineCube() {\r\n        let perch = [];\r\n        let loop = 5;\r\n        while (loop--) {\r\n            let curcol = this.randomInColumn;\r\n            if (perch.indexOf(curcol) < 0) {\r\n                cc.log(curcol);\r\n                perch.push(curcol)\r\n                let inst: cc.Node = this.creat_OneCube;\r\n                inst.setPosition(this.spawnOrigin.add(cc.v2(curcol * (this.cubeWidget + this.cubeInteraval))))\r\n            }\r\n            if (perch.length >= 3) break;\r\n        }\r\n    }\r\n    /**\r\n     * creat instantiate\r\n     * @param {cc.Prefab} actor 实例化的目标\r\n     * @param {cc.Node} parent 实例化的对象将要附加的目标，如果留空则为自身\r\n     * @returns \r\n     */\r\n    protected creatActor(actor: cc.Prefab, parent?: cc.Node): cc.Node {\r\n        let actorInst = cc.instantiate(actor);\r\n        if (parent) { parent.addChild(actorInst); }\r\n        else { this.node.addChild(actorInst); cc.log(actorInst) }\r\n        return actorInst;\r\n    }\r\n\r\n    // TAG macro                                                                                             \r\n\r\n    /**\r\n     * 获取指定的预制体方块\r\n     */\r\n    protected get cube(): cc.Prefab { return ccvv.warehouse['prefabs']['block']; }\r\n    /**\r\n     * 获取当前所有的列数\r\n     */\r\n    protected get column(): number { return 4; }\r\n    /**\r\n     * 获取列数内的随机整数\r\n     */\r\n    protected get randomInColumn(): number { return Math.floor(Math.random() * this.column); }\r\n    /**\r\n     * 获取方块所占宽度\r\n     */\r\n    protected get cubeWidget(): number { return 177; }\r\n    /**\r\n     * 获取方块间隔\r\n     */\r\n    protected get cubeInteraval(): number { return 3; }\r\n    /**\r\n     * 获取方块所占高度\r\n     */\r\n    protected get cubeHeight(): number { return 100; }\r\n    /**\r\n     * 获取方块诞生原点\r\n     */\r\n    protected get spawnOrigin(): cc.Vec2 {\r\n        if (!this._spawnOrigin)\r\n            this._spawnOrigin = cc.v2(\r\n                -(this.column - 1) * (this.cubeWidget + this.cubeInteraval) / 2,\r\n                cc.winSize.height / 2 //+ this.cubeHeight\r\n            )\r\n        return this._spawnOrigin;\r\n    }\r\n    protected _spawnOrigin: cc.Vec2 = null;\r\n    /**\r\n     * 获取每行最小可诞生的数量\r\n     */\r\n    protected get spawnMinCount(): number { return 2; }\r\n    /**\r\n     * 创建一个方块在指定层\r\n     */\r\n    protected get creat_OneCube(): cc.Node {\r\n        return this.creatActor(this.cube, ccvv.layers[1]);\r\n    }\r\n}\r\n\r\n"]}